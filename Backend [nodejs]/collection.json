{
    "openapi": "3.0.0",
    "info": {
      "title": "Fotisia Api",
      "version": "0.8",
      "description": "Documentation of the api .."
    },
    "servers": [
      {
        "url": "undefined",
        "description": "local dev server"
      }
    ],
    "paths": {
      "/api/auth/register": {
        "post": {
          "tags": [
            "register login && logout"
          ],
          "description": "create a user </br >\n    you need to pass in request body </br>\n    <ul>\n        <li><b>username</br></b></li>\n        <li><b>valid unique email</br></b></li>\n        <li><b>and password with with minimum length of 8 chars and max length of 20</b></b></li>\n    </ul>\n    <h3> Note : users are distinct by email </h3>\n    ",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            },
            {
              "in": "formData",
              "name": "data",
              "type": "application/json",
              "description": "JSON data to update make sure to give it the field name (data)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "username": "potatoUserName",
                      "password": "potatoNewPassword",
                      "firstName": "potatoFirstName",
                      "lastName": "potatoLastName",
                      "gender": "male",
                      "birthday": "2022-01-01",
                      "country": "potatoContury"
                    }
                  }
                }
              }
            },
            {
              "in": "formData",
              "name": "image",
              "type": "file",
              "description": "Image to update make sure to give it the field name (image)",
              "example": "{\"image\": \"the picture you will upload\"}"
            }
          ],
          "responses": {
            "201": {
              "description": "created",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "created successfully"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "username": [
                        "The username field is required."
                      ],
                      "email": [
                        "The email field is required.",
                        "Email is already in use !",
                        "The email format is invalid."
                      ],
                      "password": [
                        "The password field is required.",
                        "The password must be at least 8 characters.",
                        "The password may not be greater than 20 characters."
                      ],
                      "gender": [
                        "The selected gender is invalid."
                      ],
                      "birthday": [
                        "The birthday is not a valid date format."
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/auth/login": {
        "post": {
          "tags": [
            "register login && logout"
          ],
          "description": "login route for a registered email</br >\n    you need to pass in request body </br>\n    <ul>\n        <li><b>valid email</br></b></li>\n        <li><b>and a password</b></b></li>\n    </ul>\n    <h3> Note : Keep your token safe you need to use it </h3>\n    ",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "example": {
                    "email": "potato@email.com",
                    "password": "potatoPassword"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "user": {
                        "id": 10,
                        "username": "potato",
                        "token": "the token string"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "email": [
                        "The email field is required.",
                        "The email format is invalid."
                      ],
                      "password": [
                        "The password field is required."
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "email": [
                        "Invalid Credentials no such email"
                      ],
                      "password": [
                        "Invalid Credentials Wrong Password"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/auth/logout": {
        "get": {
          "tags": [
            "register login && logout"
          ],
          "description": "logout route for the current logged in email</br >\n    you must be authorized </br>\n    <h3> Note : send token in bearer </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "204": {
              "description": "No content"
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/home/search{?text=queryString}": {
        "get": {
          "tags": [
            "Home Page"
          ],
          "description": "search for (users,posts,groups) by string passed in query</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "query",
              "name": "text",
              "type": "application/json",
              "description": "Key-value pairs for filtering users,posts,groups",
              "schema": {
                "type": "Object",
                "example": {
                  "text": "u"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "4 Search Results Found !!",
                      "users": [
                        {
                          "id": 2,
                          "username": "updatedUsername",
                          "picturePath": "image-1690691170494.PNG"
                        },
                        {
                          "id": 5,
                          "username": "User3",
                          "picturePath": null
                        }
                      ],
                      "groups": [
                        {
                          "id": 1,
                          "groupName": "potatoGroup",
                          "groupDescription": "potatoDescription",
                          "groupPicture": null,
                          "createdAt": "2023-08-02T10:42:26.000Z",
                          "updatedAt": "2023-08-02T10:42:26.000Z"
                        }
                      ],
                      "posts": [
                        {
                          "id": 4,
                          "text": "updated text for post",
                          "picture": "image-1690973695852.PNG",
                          "createdAt": "2023-08-01T18:03:25.000Z",
                          "state": "public",
                          "updatedAt": "2023-08-02T10:54:55.000Z",
                          "userId": 5,
                          "commentsCount": 1,
                          "likesCount": 1,
                          "dislikesCount": 0,
                          "User": {
                            "id": 5,
                            "username": "User3",
                            "picturePath": null
                          },
                          "Comments": [
                            {
                              "id": 7,
                              "text": "comment text",
                              "createdAt": "2023-08-01T18:08:31.000Z",
                              "updatedAt": "2023-08-01T18:08:31.000Z",
                              "userId": 5,
                              "postId": 4,
                              "User": {
                                "id": 5,
                                "username": "User3",
                                "picturePath": null
                              }
                            }
                          ],
                          "Reactions": [
                            {
                              "id": 3,
                              "state": "like",
                              "createdAt": "2023-08-01T18:08:26.000Z",
                              "updatedAt": "2023-08-01T18:08:26.000Z",
                              "userId": 5,
                              "postId": 4,
                              "User": {
                                "id": 5,
                                "username": "User3",
                                "picturePath": null
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/home/news": {
        "get": {
          "tags": [
            "Home Page"
          ],
          "description": "get your posts and your friends posts sorted by update time</br >\n  you must be authorized </br>\n  <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "posts": [
                        {
                          "id": 4,
                          "text": "updated text for post",
                          "picture": "image-1690973695852.PNG",
                          "createdAt": "2023-08-01T18:03:25.000Z",
                          "state": "public",
                          "updatedAt": "2023-08-02T10:54:55.000Z",
                          "userId": 5,
                          "commentsCount": 1,
                          "likesCount": 1,
                          "dislikesCount": 0,
                          "User": {
                            "id": 5,
                            "username": "User3",
                            "picturePath": null
                          },
                          "Comments": [
                            {
                              "id": 7,
                              "text": "comment text",
                              "createdAt": "2023-08-01T18:08:31.000Z",
                              "updatedAt": "2023-08-01T18:08:31.000Z",
                              "userId": 5,
                              "postId": 4,
                              "User": {
                                "id": 5,
                                "username": "User3",
                                "picturePath": null
                              }
                            }
                          ],
                          "Reactions": [
                            {
                              "id": 3,
                              "state": "like",
                              "createdAt": "2023-08-01T18:08:26.000Z",
                              "updatedAt": "2023-08-01T18:08:26.000Z",
                              "userId": 5,
                              "postId": 4,
                              "User": {
                                "id": 5,
                                "username": "User3",
                                "picturePath": null
                              }
                            }
                          ]
                        },
                        {
                          "id": 6,
                          "text": "text for post",
                          "picture": "image-1690913824592.PNG",
                          "createdAt": "2023-08-01T18:17:04.000Z",
                          "state": "public",
                          "updatedAt": "2023-08-01T18:17:04.000Z",
                          "userId": 2,
                          "commentsCount": 0,
                          "likesCount": 0,
                          "dislikesCount": 0,
                          "User": {
                            "id": 2,
                            "username": "updatedUsername",
                            "picturePath": "image-1690691170494.PNG"
                          },
                          "Comments": [],
                          "Reactions": []
                        },
                        {
                          "id": 5,
                          "text": "text for post",
                          "picture": "image-1690913287266.PNG",
                          "createdAt": "2023-08-01T18:08:07.000Z",
                          "state": "public",
                          "updatedAt": "2023-08-01T18:08:07.000Z",
                          "userId": 2,
                          "commentsCount": 0,
                          "likesCount": 0,
                          "dislikesCount": 0,
                          "User": {
                            "id": 2,
                            "username": "updatedUsername",
                            "picturePath": "image-1690691170494.PNG"
                          },
                          "Comments": [],
                          "Reactions": []
                        }
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/user/profile/{id}": {
        "get": {
          "tags": [
            "Users"
          ],
          "description": "get profile information of user by id</br >\n    you must be authorized logged in </br>\n    <h3> Note : send token in bearer </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": 2,
                        "username": "potato",
                        "email": "potato@email.com",
                        "firstName": null,
                        "lastName": null,
                        "picturePath": null,
                        "gender": null,
                        "birthday": null,
                        "country": null,
                        "createdAt": "2023-06-15T07:17:39.000Z",
                        "updatedAt": "2023-06-15T07:17:39.000Z",
                        "state": [
                          "friends",
                          "not friends",
                          "pending",
                          " "
                        ]
                      },
                      {
                        "user": [
                          "User not found"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "msg": "this user is blocked"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "Users"
          ],
          "description": "update the user info</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>\n    <h3> Note 2: Don't send data as raw json you have to send it as form-data \n    key value give the picture field name 'image' and the rest of the data 'data' it's optional to send (single image ,json data ,both single image and json data) </h3>\n    <h3> Note 3: If you updated the password you need to login again </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            },
            {
              "in": "formData",
              "name": "data",
              "type": "application/json",
              "description": "JSON data to update make sure to give it the field name (data)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "username": "potatoUserName",
                      "password": "potatoNewPassword",
                      "firstName": "potatoFirstName",
                      "lastName": "potatoLastName",
                      "gender": "male",
                      "birthday": "2022-01-01",
                      "country": "potatoContury"
                    }
                  }
                }
              }
            },
            {
              "in": "formData",
              "name": "image",
              "type": "file",
              "description": "Image to update make sure to give it the field name (image)",
              "example": "{\"image\": \"the picture you will upload\"}"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "updated successfully",
                      "user": [
                        "User not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      },
                      {
                        "password": [
                          "The password must be at least 8 characters.",
                          "The password may not be greater than 20 characters."
                        ]
                      },
                      {
                        "gender": [
                          "The selected gender is invalid."
                        ]
                      },
                      {
                        "birthday": [
                          "The birthday is not a valid date format."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only modify your account"
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Users"
          ],
          "description": "delete the user</br >\n    you must be authorized </br>\n    <h3> Note : send token in bearer </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "account has been deleted",
                      "user": [
                        "User not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only modify your account"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/post/create": {
        "post": {
          "tags": [
            "Posts"
          ],
          "description": "create post</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>\n    <h3> Note 2: Don't send data as raw json you have to send it as form-data \n    key value give the picture field name 'image' and the rest of the data 'data' it's optional to send (single image ,json data ,both single image and json data) </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "formData",
              "name": "data",
              "type": "application/json",
              "description": "JSON data to update make sure to give it the field name (data)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "text": "text for creating post"
                    }
                  }
                }
              }
            },
            {
              "in": "formData",
              "name": "image",
              "type": "file",
              "description": "Image to upload make sure to give it the field name (image)",
              "example": "{\"image\": \"the picture you will upload\"}"
            }
          ],
          "responses": {
            "201": {
              "description": "CREATED",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "createdAt": "2023-07-03T07:58:13.907Z",
                      "updatedAt": "2023-07-03T07:58:13.925Z",
                      "id": 8,
                      "userId": 3,
                      "text": "text for post",
                      "state": "public",
                      "picture": "image-1688371093888.PNG"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "text": [
                          "The text field is required."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error if you don't send data in form",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "error": "Unexpected end of form"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/post/edit/{id}": {
        "patch": {
          "tags": [
            "Posts"
          ],
          "description": "update post</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>\n    <h3> Note 2: Don't send data as raw json you have to send it as form-data \n    key value give the picture field name 'image' and the rest of the data 'data' it's optional to send (single image ,json data ,both single image and json data) </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            },
            {
              "in": "formData",
              "name": "data",
              "type": "application/json",
              "description": "JSON data to update make sure to give it the field name (data)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "text": "updated text for post"
                    }
                  }
                }
              }
            },
            {
              "in": "formData",
              "name": "image",
              "type": "file",
              "description": "Image to update make sure to give it the field name (image)",
              "example": "{\"image\": \"the picture you will upload\"}"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "id": 1,
                      "text": "updated text for post",
                      "picture": "image-1688375694473.PNG",
                      "createdAt": "2023-07-03T09:09:38.000Z",
                      "state": "public",
                      "updatedAt": "2023-07-03T09:32:57.000Z",
                      "userId": 1,
                      "post": [
                        "post not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      },
                      {
                        "text": [
                          "The text field is required."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only modify your posts"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/post/delete/{id}": {
        "delete": {
          "tags": [
            "Posts"
          ],
          "description": "delete the post by id</br >\n    you must be authorized </br>\n    <h3> Note : send token in bearer </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "post has been deleted",
                      "post": [
                        "post not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only modify your posts"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/post/{id}": {
        "get": {
          "tags": [
            "Posts"
          ],
          "description": "get One post By Id of the post</br >\n    you must be authorized </br>\n    <h3> Note : send token in bearer </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "onePost": {
                        "id": 2,
                        "text": "text for post",
                        "picture": "image-1689912000911.PNG",
                        "createdAt": "2023-07-21T04:00:00.000Z",
                        "state": "public",
                        "updatedAt": "2023-07-21T04:00:00.000Z",
                        "userId": 2,
                        "commentsCount": 3,
                        "likesCount": 1,
                        "dislikesCount": 1,
                        "User": {
                          "username": "firstUser",
                          "picturePath": null
                        },
                        "Comments": [
                          {
                            "id": 2,
                            "text": "updated text for a comment",
                            "createdAt": "2023-07-21T04:00:12.000Z",
                            "updatedAt": "2023-07-21T04:00:25.000Z",
                            "userId": 2,
                            "postId": 2,
                            "User": {
                              "username": "firstUser",
                              "picturePath": null
                            }
                          },
                          {
                            "id": 3,
                            "text": "comment text",
                            "createdAt": "2023-07-21T04:16:32.000Z",
                            "updatedAt": "2023-07-21T04:16:32.000Z",
                            "userId": 2,
                            "postId": 2,
                            "User": {
                              "username": "firstUser",
                              "picturePath": null
                            }
                          },
                          {
                            "id": 5,
                            "text": "comment text",
                            "createdAt": "2023-07-21T04:23:34.000Z",
                            "updatedAt": "2023-07-21T04:23:34.000Z",
                            "userId": 3,
                            "postId": 2,
                            "User": {
                              "username": "firstUser",
                              "picturePath": null
                            }
                          }
                        ],
                        "Reactions": [
                          {
                            "id": 2,
                            "state": "like",
                            "createdAt": "2023-07-21T04:00:36.000Z",
                            "updatedAt": "2023-07-21T04:00:36.000Z",
                            "userId": 2,
                            "postId": 2,
                            "User": {
                              "username": "firstUser",
                              "picturePath": null
                            }
                          },
                          {
                            "id": 5,
                            "state": "dislike",
                            "createdAt": "2023-07-21T04:23:45.000Z",
                            "updatedAt": "2023-07-21T04:26:24.000Z",
                            "userId": 3,
                            "postId": 2,
                            "User": {
                              "username": "firstUser",
                              "picturePath": null
                            }
                          }
                        ]
                      },
                      "post": [
                        "post not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only see/(interact with )your posts or your friends posts or your groups posts"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/post/all/{id}": {
        "get": {
          "tags": [
            "Posts"
          ],
          "description": "get all posts for a user with the id of user</br >\n    you must be authorized </br>\n    <h3> Note : send token in bearer </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "list of posts": [
                        {
                          "id": 2,
                          "text": "text for post",
                          "picture": "image-1689912000911.PNG",
                          "createdAt": "2023-07-21T04:00:00.000Z",
                          "state": "public",
                          "updatedAt": "2023-07-21T04:00:00.000Z",
                          "userId": 2,
                          "commentsCount": 3,
                          "likesCount": 1,
                          "dislikesCount": 1,
                          "User": {
                            "username": "firstUser",
                            "picturePath": null
                          },
                          "Comments": [
                            {
                              "id": 5,
                              "text": "comment text",
                              "createdAt": "2023-07-21T04:23:34.000Z",
                              "updatedAt": "2023-07-21T04:23:34.000Z",
                              "userId": 3,
                              "postId": 2,
                              "User": {
                                "username": "firstUser",
                                "picturePath": null
                              }
                            },
                            {
                              "id": 3,
                              "text": "comment text",
                              "createdAt": "2023-07-21T04:16:32.000Z",
                              "updatedAt": "2023-07-21T04:16:32.000Z",
                              "userId": 2,
                              "postId": 2,
                              "User": {
                                "username": "firstUser",
                                "picturePath": null
                              }
                            },
                            {
                              "id": 2,
                              "text": "updated text for a comment",
                              "createdAt": "2023-07-21T04:00:12.000Z",
                              "updatedAt": "2023-07-21T04:00:25.000Z",
                              "userId": 2,
                              "postId": 2,
                              "User": {
                                "username": "firstUser",
                                "picturePath": null
                              }
                            }
                          ],
                          "Reactions": [
                            {
                              "id": 5,
                              "state": "dislike",
                              "createdAt": "2023-07-21T04:23:45.000Z",
                              "updatedAt": "2023-07-21T04:26:24.000Z",
                              "userId": 3,
                              "postId": 2,
                              "User": {
                                "username": "firstUser",
                                "picturePath": null
                              }
                            },
                            {
                              "id": 2,
                              "state": "like",
                              "createdAt": "2023-07-21T04:00:36.000Z",
                              "updatedAt": "2023-07-21T04:00:36.000Z",
                              "userId": 2,
                              "postId": 2,
                              "User": {
                                "username": "firstUser",
                                "picturePath": null
                              }
                            }
                          ]
                        },
                        {
                          "id": 3,
                          "text": "text for post",
                          "picture": "image-1689912827440.PNG",
                          "createdAt": "2023-07-21T04:13:47.000Z",
                          "state": "public",
                          "updatedAt": "2023-07-21T04:13:47.000Z",
                          "userId": 2,
                          "commentsCount": 2,
                          "likesCount": 2,
                          "dislikesCount": 0,
                          "User": {
                            "username": "firstUser",
                            "picturePath": null
                          },
                          "Comments": [
                            {
                              "id": 6,
                              "text": "comment text",
                              "createdAt": "2023-07-21T04:23:37.000Z",
                              "updatedAt": "2023-07-21T04:23:37.000Z",
                              "userId": 3,
                              "postId": 3,
                              "User": {
                                "username": "firstUser",
                                "picturePath": null
                              }
                            },
                            {
                              "id": 4,
                              "text": "comment text",
                              "createdAt": "2023-07-21T04:16:36.000Z",
                              "updatedAt": "2023-07-21T04:16:36.000Z",
                              "userId": 2,
                              "postId": 3,
                              "User": {
                                "username": "firstUser",
                                "picturePath": null
                              }
                            }
                          ],
                          "Reactions": [
                            {
                              "id": 4,
                              "state": "like",
                              "createdAt": "2023-07-21T04:23:43.000Z",
                              "updatedAt": "2023-07-21T04:23:43.000Z",
                              "userId": 3,
                              "postId": 3,
                              "User": {
                                "username": "firstUser",
                                "picturePath": null
                              }
                            },
                            {
                              "id": 3,
                              "state": "like",
                              "createdAt": "2023-07-21T04:13:55.000Z",
                              "updatedAt": "2023-07-21T04:13:55.000Z",
                              "userId": 2,
                              "postId": 3,
                              "User": {
                                "username": "firstUser",
                                "picturePath": null
                              }
                            }
                          ]
                        }
                      ],
                      "user": [
                        "User not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only see/(interact with )your posts or your friends posts or your groups posts"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/comment/add/{id}": {
        "post": {
          "tags": [
            "Comments"
          ],
          "description": "create comment for a post giving the post id</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>\n    <h3> Note 2: you can send data as raw json in body request </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "example": {
                    "text": "comment text"
                  }
                }
              }
            }
          },
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "post": [
                        "post not found"
                      ]
                    }
                  }
                }
              }
            },
            "201": {
              "description": "CREATED",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "createdAt": "2023-07-16T11:22:38.912Z",
                      "updatedAt": "2023-07-16T11:22:38.913Z",
                      "id": 12,
                      "userId": 1,
                      "postId": "9",
                      "text": "comment text"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      },
                      {
                        "text": [
                          "The text field is required."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only see/(interact with )your posts or your friends posts or your groups posts"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/comment/edit/{id}": {
        "patch": {
          "tags": [
            "Comments"
          ],
          "description": "update comment by id</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "example": {
                    "text": "updated text for a comment"
                  }
                }
              }
            }
          },
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "id": 14,
                      "text": "updated text for a comment",
                      "createdAt": "2023-07-16T11:34:44.000Z",
                      "updatedAt": "2023-07-16T11:34:51.000Z",
                      "userId": 1,
                      "postId": 9,
                      "comment": [
                        "comment not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      },
                      {
                        "text": [
                          "The text field is required."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "msg": "You can only modify your comments"
                      },
                      {
                        "msg": "You can't update your comment on post of user who is not your friend"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/api/comment/delete/{id}": {
        "delete": {
          "tags": [
            "Comments"
          ],
          "description": "delete comment by id</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "comment has been deleted",
                      "comment": [
                        "comment not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only modify your comments"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/comment/{id}": {
        "get": {
          "tags": [
            "Comments"
          ],
          "description": "get One comment By Id of the comment</br >\n    you must be authorized </br>\n    <h3> Note : send token in bearer </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "oneComment": {
                        "id": 7,
                        "text": null,
                        "createdAt": "2023-07-16T10:52:24.000Z",
                        "updatedAt": "2023-07-16T10:52:24.000Z",
                        "userId": 4,
                        "postId": 9,
                        "User": {
                          "username": "potatoCodeforces",
                          "picturePath": null
                        }
                      },
                      "comment": [
                        "comment not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only see your comments or your friends comments or your groups comments"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/comment/all/{id}": {
        "get": {
          "tags": [
            "Comments"
          ],
          "description": "get all comments of user By user id</br >\n    you must be authorized </br>\n    <h3> Note : send token in bearer </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "ListOfComments": [
                        {
                          "id": 8,
                          "text": "updated text for a comment",
                          "createdAt": "2023-07-16T10:54:39.000Z",
                          "updatedAt": "2023-07-16T11:01:20.000Z",
                          "userId": 1,
                          "postId": 9,
                          "User": {
                            "username": "potatoCodeforces",
                            "picturePath": null
                          }
                        },
                        {
                          "id": 10,
                          "text": "comment",
                          "createdAt": "2023-07-16T11:22:11.000Z",
                          "updatedAt": "2023-07-16T11:22:11.000Z",
                          "userId": 1,
                          "postId": 9,
                          "User": {
                            "username": "potatoCodeforces",
                            "picturePath": null
                          }
                        },
                        {
                          "id": 11,
                          "text": "updated text for a comment",
                          "createdAt": "2023-07-16T11:22:19.000Z",
                          "updatedAt": "2023-07-16T11:36:10.000Z",
                          "userId": 1,
                          "postId": 9,
                          "User": {
                            "username": "potatoCodeforces",
                            "picturePath": null
                          }
                        },
                        {
                          "id": 12,
                          "text": "comment text",
                          "createdAt": "2023-07-16T11:22:38.000Z",
                          "updatedAt": "2023-07-16T11:22:38.000Z",
                          "userId": 1,
                          "postId": 9,
                          "User": {
                            "username": "potatoCodeforces",
                            "picturePath": null
                          }
                        },
                        {
                          "id": 13,
                          "text": "updated text for a comment",
                          "createdAt": "2023-07-16T11:24:31.000Z",
                          "updatedAt": "2023-07-16T11:36:06.000Z",
                          "userId": 1,
                          "postId": 9,
                          "User": {
                            "username": "potatoCodeforces",
                            "picturePath": null
                          }
                        },
                        {
                          "id": 15,
                          "text": "comment text",
                          "createdAt": "2023-07-18T08:21:56.000Z",
                          "updatedAt": "2023-07-18T08:21:56.000Z",
                          "userId": 1,
                          "postId": 10,
                          "User": {
                            "username": "potatoCodeforces",
                            "picturePath": null
                          }
                        }
                      ],
                      "user": [
                        "User not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only see your comments or your friends comments or your groups comments"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/reaction/add/{id}": {
        "post": {
          "tags": [
            "Reactions"
          ],
          "description": "create reaction for a post giving the post id</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "example": [
                    {
                      "state": "dislike"
                    },
                    {
                      "state": "like"
                    }
                  ]
                }
              }
            }
          },
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "post": [
                        "post not found"
                      ]
                    }
                  }
                }
              }
            },
            "201": {
              "description": "CREATED",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "createdAt": "2023-07-18T11:11:59.607Z",
                      "updatedAt": "2023-07-18T11:11:59.611Z",
                      "id": 4,
                      "userId": 1,
                      "postId": "9",
                      "state": "dislike"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      },
                      {
                        "state": [
                          "The selected state is invalid.",
                          "The state field is required."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only see/interact your posts or your friends posts or your groups posts"
                    }
                  }
                }
              }
            },
            "409": {
              "description": "Conflict",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "reaction": [
                        "you have already reacted to this post"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/reaction/edit/{id}": {
        "patch": {
          "tags": [
            "Reactions"
          ],
          "description": "edit reaction  giving the reaction id</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "example": [
                    {
                      "state": "dislike"
                    },
                    {
                      "state": "like"
                    }
                  ]
                }
              }
            }
          },
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": 5,
                        "state": "like",
                        "createdAt": "2023-07-18T11:18:30.000Z",
                        "updatedAt": "2023-07-20T10:42:59.000Z",
                        "userId": 1,
                        "postId": 10
                      },
                      {
                        "reaction": [
                          "Reaction not found"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      },
                      {
                        "state": [
                          "The selected state is invalid.",
                          "The state field is required."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "msg": "You can only modify your reactions"
                      },
                      {
                        "msg": "You can't update your reaction on post of user who is not your friend"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/api/reaction/delete/{id}": {
        "delete": {
          "tags": [
            "Reactions"
          ],
          "description": "delete reaction  giving the reaction id</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "msg": "reaction has been deleted"
                      },
                      {
                        "reaction": [
                          "Reaction not found"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only modify your reactions"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/reaction/{id}": {
        "get": {
          "tags": [
            "Reactions"
          ],
          "description": "get One reaction By Id of the reaction</br >\n    you must be authorized </br>\n    <h3> Note : send token in bearer </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "oneReaction": {
                        "id": 5,
                        "state": "dislike",
                        "createdAt": "2023-07-18T11:18:30.000Z",
                        "updatedAt": "2023-07-20T11:13:30.000Z",
                        "userId": 1,
                        "postId": 10,
                        "User": {
                          "username": "potatoCodeforces",
                          "picturePath": null
                        }
                      },
                      "reaction": [
                        "Reaction not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only see your reactions or your friends reactions or your groups reactions"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/reaction/all/{id}": {
        "get": {
          "tags": [
            "Reactions"
          ],
          "description": "get all reactions of user By user id</br >\n    you must be authorized </br>\n    <h3> Note : send token in bearer </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "ListOfReactions": [
                        {
                          "id": 5,
                          "state": "dislike",
                          "createdAt": "2023-07-18T11:18:30.000Z",
                          "updatedAt": "2023-07-20T11:13:30.000Z",
                          "userId": 1,
                          "postId": 10,
                          "User": {
                            "username": "potatoCodeforces",
                            "picturePath": null
                          }
                        },
                        {
                          "id": 8,
                          "state": "like",
                          "createdAt": "2023-07-20T11:36:43.000Z",
                          "updatedAt": "2023-07-20T11:36:43.000Z",
                          "userId": 1,
                          "postId": 9,
                          "User": {
                            "username": "potatoCodeforces",
                            "picturePath": null
                          }
                        }
                      ],
                      "user": [
                        "User not found"
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "id": [
                          "The id must be a number."
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can only see your reactions or your friends reactions or your groups reactions"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/sendFriendRequest/{id}": {
        "post": {
          "tags": [
            "Relationships"
          ],
          "description": "create friend request by the id of the user</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "user": [
                        "User not found"
                      ]
                    }
                  }
                }
              }
            },
            "201": {
              "description": "CREATED",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "request sent successfully",
                      "relationship": {
                        "createdAt": "2023-07-31T11:56:05.556Z",
                        "updatedAt": "2023-07-31T11:56:05.556Z",
                        "id": 14,
                        "firstUserId": 5,
                        "secondUserId": 6,
                        "state": "pending"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "id": [
                        "The id must be a number."
                      ],
                      "relationship": [
                        "No self loops in the friends system ,The given ID is the same as yours"
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "409": {
              "description": "Conflict",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "relationship": [
                        "You have already sent a request to this user.",
                        "This user has sent you a request, Check received requests.",
                        "You are already friends.",
                        "You blocked this user.",
                        "This user has blocked you.",
                        "there is already a relationship."
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/mySentRequests": {
        "get": {
          "tags": [
            "Relationships"
          ],
          "description": "get sent requests for the current logged in user </br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "requestRecevier": {
                          "id": 5,
                          "username": "User3",
                          "picturePath": null
                        },
                        "id": 13,
                        "firstUserId": 2,
                        "secondUserId": 5,
                        "state": "pending",
                        "createdAt": "2023-07-30T17:03:57.000Z",
                        "updatedAt": "2023-07-31T06:19:49.000Z"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/myReceivedRequests": {
        "get": {
          "tags": [
            "Relationships"
          ],
          "description": "get received requests for the current logged in user </br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "requestSender": {
                          "id": 2,
                          "username": "updatedUsername",
                          "picturePath": "image-1690691170494.PNG"
                        },
                        "id": 13,
                        "firstUserId": 2,
                        "secondUserId": 5,
                        "state": "received",
                        "createdAt": "2023-07-30T17:03:57.000Z",
                        "updatedAt": "2023-07-31T06:19:49.000Z"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/request/{id}": {
        "delete": {
          "tags": [
            "Relationships"
          ],
          "description": "delete sent request by the id of the reqeust</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "relationship": [
                        "Relationship not found"
                      ],
                      "msg": "request has been deleted"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "id": [
                        "The id must be a number."
                      ],
                      "relationship": [
                        "The request is not pending or recevied , you are friends or blocked "
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "msg": "You are not a part of the relation"
                      },
                      {
                        "msg": "You are not the sender of the request"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/response/accept/{id}": {
        "patch": {
          "tags": [
            "Relationships"
          ],
          "description": "accept received request by the id of the request</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "relationship": [
                          "Relationship not found"
                        ]
                      },
                      {
                        "msg": "request accepted successfully .. you are friends now !!",
                        "relationship": {
                          "id": 16,
                          "firstUserId": 2,
                          "secondUserId": 5,
                          "state": "friends",
                          "createdAt": "2023-07-31T15:39:21.000Z",
                          "updatedAt": "2023-07-31T15:53:00.000Z"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "id": [
                        "The id must be a number."
                      ],
                      "relationship": [
                        "The request is not pending or recevied , you are friends or blocked "
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "msg": "You are not a part of the relation"
                      },
                      {
                        "msg": "You are not the receiver of the request"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/response/reject/{id}": {
        "delete": {
          "tags": [
            "Relationships"
          ],
          "description": "delete received request by the id of the reqeust</br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "relationship": [
                        "Relationship not found"
                      ],
                      "msg": "request has been deleted"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "id": [
                        "The id must be a number."
                      ],
                      "relationship": [
                        "The request is not pending or recevied , you are friends or blocked "
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "msg": "You are not a part of the relation"
                      },
                      {
                        "msg": "You are not the receiver of the request"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/removeFriend/{id}": {
        "delete": {
          "tags": [
            "Relationships"
          ],
          "description": "remove friend by the id </br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "user": [
                        "User not found"
                      ],
                      "msg": "friend has been removed"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "id": [
                        "The id must be a number."
                      ],
                      "relationship": [
                        "No self loops in the friends system ,The given ID is the same as yours"
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "This is user is not your friend !!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/myFriends": {
        "get": {
          "tags": [
            "Relationships"
          ],
          "description": "get friends for the current logged in user </br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "friend": {
                          "id": 6,
                          "username": "User3",
                          "picturePath": null
                        },
                        "id": 15,
                        "firstUserId": 6,
                        "secondUserId": 5,
                        "state": "friends",
                        "createdAt": "2023-07-31T12:05:28.000Z",
                        "updatedAt": "2023-07-31T12:10:50.000Z"
                      },
                      {
                        "friend": {
                          "id": 2,
                          "username": "updatedUsername",
                          "picturePath": "image-1690691170494.PNG"
                        },
                        "id": 16,
                        "firstUserId": 2,
                        "secondUserId": 5,
                        "state": "friends",
                        "createdAt": "2023-07-31T15:39:21.000Z",
                        "updatedAt": "2023-07-31T15:53:00.000Z"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/blockAFriend/{id}": {
        "patch": {
          "tags": [
            "Relationships"
          ],
          "description": "block friend by the id </br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "user": [
                          "User not found"
                        ]
                      },
                      {
                        "msg": "friend blocked successfully .. !!",
                        "relationship": {
                          "id": 15,
                          "firstUserId": 5,
                          "secondUserId": 6,
                          "state": "blocked",
                          "createdAt": "2023-07-31T12:05:28.000Z",
                          "updatedAt": "2023-07-31T16:57:51.000Z"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "id": [
                        "The id must be a number."
                      ],
                      "relationship": [
                        "No self loops in the friends system ,The given ID is the same as yours"
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "This is user is not your friend !!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/unblockAUser/{id}": {
        "patch": {
          "tags": [
            "Relationships"
          ],
          "description": "unblock user you blocked by the id </br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "user": [
                          "User not found"
                        ]
                      },
                      {
                        "msg": "unblocked the user successfully .. you are friends now !!",
                        "relationship": {
                          "id": 15,
                          "firstUserId": 5,
                          "secondUserId": 6,
                          "state": "friends",
                          "createdAt": "2023-07-31T12:05:28.000Z",
                          "updatedAt": "2023-07-31T17:10:14.000Z"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "id": [
                        "The id must be a number."
                      ],
                      "relationship": [
                        "No self loops in the friends system ,The given ID is the same as yours",
                        "there is no blocked relationship here"
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "You can't unblock someone who blocked you !!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/myBlockedList": {
        "get": {
          "tags": [
            "Relationships"
          ],
          "description": "get the user blocked list </br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      [
                        {
                          "blockedUser": {
                            "id": 6,
                            "username": "User3",
                            "picturePath": null
                          },
                          "id": 15,
                          "firstUserId": 5,
                          "secondUserId": 6,
                          "state": "blocked",
                          "createdAt": "2023-07-31T12:05:28.000Z",
                          "updatedAt": "2023-07-31T17:13:45.000Z"
                        }
                      ]
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/relationship/whoBlockedMeList": {
        "get": {
          "tags": [
            "Relationships"
          ],
          "description": "get the list of persons who blocked you </br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      [
                        {
                          "userBlockedMe": {
                            "id": 5,
                            "username": "User3",
                            "picturePath": null
                          },
                          "id": 15,
                          "firstUserId": 5,
                          "secondUserId": 6,
                          "state": "blocked",
                          "createdAt": "2023-07-31T12:05:28.000Z",
                          "updatedAt": "2023-07-31T17:13:45.000Z"
                        }
                      ]
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/chat/messages/{id}": {
        "get": {
          "tags": [
            "Chat"
          ],
          "description": "get messages of your friend by the id of your friend </br >\n    you must be authorized </br>\n    <h3> Note 1: send token in bearer </h3>",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "type": "integer",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "user": [
                          "User not found"
                        ]
                      },
                      {
                        "chat": [
                          {
                            "id": 1,
                            "message": "Hello second User How are you",
                            "createdAt": "2023-08-02T00:00:00.000Z",
                            "updatedAt": "2023-08-02T00:00:00.000Z",
                            "senderUserId": 1,
                            "reciverUserId": 2,
                            "senderUser": {
                              "id": 1,
                              "username": "first",
                              "picturePath": null
                            },
                            "reciverUser": {
                              "id": 2,
                              "username": "second",
                              "picturePath": null
                            }
                          },
                          {
                            "id": 2,
                            "message": "Hello first User I am fine",
                            "createdAt": "2023-08-02T12:00:00.000Z",
                            "updatedAt": "2023-08-02T12:00:00.000Z",
                            "senderUserId": 2,
                            "reciverUserId": 1,
                            "senderUser": {
                              "id": 2,
                              "username": "second",
                              "picturePath": null
                            },
                            "reciverUser": {
                              "id": 1,
                              "username": "first",
                              "picturePath": null
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "id": [
                        "The id must be a number."
                      ],
                      "relationship": [
                        "No self loops in the friends system ,The given ID is the same as yours"
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "This is user is not your friend !!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/group/": {
        "post": {
          "tags": [
            "group"
          ],
          "summary": "Create Group",
          "operationId": "CreateGroup",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "groupName": "name",
                    "groupDescription": "des..."
                  }
                },
                "example": {
                  "groupName": "name",
                  "groupDescription": "des..."
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "example": {
                      "msg": "Group created successfully",
                      "group": {
                        "createdAt": "2023-08-08T13:03:58.695Z",
                        "updatedAt": "2023-08-08T13:03:58.696Z",
                        "id": 2,
                        "groupName": "name",
                        "groupDescription": "des..."
                      }
                    }
                  },
                  "example": {
                    "msg": "Group created successfully",
                    "group": {
                      "createdAt": "2023-08-08T13:03:58.695Z",
                      "updatedAt": "2023-08-08T13:03:58.696Z",
                      "id": 2,
                      "groupName": "name",
                      "groupDescription": "des..."
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "example": {
                      "msg": "failed",
                      "errors": {
                        "groupName": [
                          "The groupName field is required."
                        ],
                        "groupDescription": [
                          "The groupDescription field is required."
                        ]
                      }
                    }
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "groupName": [
                        "The groupName field is required."
                      ],
                      "groupDescription": [
                        "The groupDescription field is required."
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  },
                  "example": {
                    "msg": "Authentication invalid"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{id}": {
        "delete": {
          "tags": [
            "group"
          ],
          "summary": "Delete Group (Admin)",
          "operationId": "DeleteGroup(Admin)",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "Group deleted successfully"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "Group deleted successfully"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "Forbidden Operation Not allowed"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "Forbidden Operation Not allowed"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "groupId": [
                              "group not found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "groupId": [
                        "group not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "patch": {
          "tags": [
            "group"
          ],
          "summary": "Edit Group",
          "operationId": "EditGroup",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string"
              },
              "required": true
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "example": {
                        "groupName": "name",
                        "groupDescription": "des..."
                      }
                    }
                  ]
                },
                "example": {
                  "groupName": "name",
                  "groupDescription": "des..."
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "group updated successfully",
                          "group": [
                            1
                          ]
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "group updated successfully",
                    "group": [
                      1
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "groupName": [
                              "The groupName field is required."
                            ],
                            "groupDescription": [
                              "The groupDescription field is required."
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "groupName": [
                        "The groupName field is required."
                      ],
                      "groupDescription": [
                        "The groupDescription field is required."
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "Authentication invalid"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "Authentication invalid"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "Group Not found "
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "Group Not found "
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "group"
          ],
          "summary": "Get Group",
          "operationId": "GetGroup",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "success",
                          "group": {
                            "id": 1,
                            "groupName": "name",
                            "groupDescription": "des...",
                            "groupPicture": null,
                            "createdAt": "2023-08-01T23:10:34.000Z",
                            "updatedAt": "2023-08-08T13:06:11.000Z"
                          },
                          "role": "Owner"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "success",
                    "group": {
                      "id": 1,
                      "groupName": "name",
                      "groupDescription": "des...",
                      "groupPicture": null,
                      "createdAt": "2023-08-01T23:10:34.000Z",
                      "updatedAt": "2023-08-08T13:06:11.000Z"
                    },
                    "role": "Owner"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "groupId": [
                              "group not found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "groupId": [
                        "group not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/my": {
        "get": {
          "tags": [
            "group"
          ],
          "summary": "My Groups",
          "operationId": "MyGroups",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "groups": [
                            {
                              "id": 1,
                              "groupName": "name",
                              "groupDescription": "des...",
                              "groupPicture": null,
                              "createdAt": "2023-08-01T23:10:34.000Z",
                              "updatedAt": "2023-08-08T13:06:11.000Z",
                              "GroupUser": {
                                "id": 1,
                                "groupId": 1,
                                "userId": 2,
                                "state": "Owner",
                                "createdAt": "2023-08-01T23:10:34.000Z",
                                "updatedAt": "2023-08-01T23:10:34.000Z",
                                "GroupId": 1,
                                "UserId": 2
                              }
                            },
                            {
                              "id": 2,
                              "groupName": "name",
                              "groupDescription": "des...",
                              "groupPicture": null,
                              "createdAt": "2023-08-08T13:03:58.000Z",
                              "updatedAt": "2023-08-08T13:03:58.000Z",
                              "GroupUser": {
                                "id": 2,
                                "groupId": 2,
                                "userId": 2,
                                "state": "Owner",
                                "createdAt": "2023-08-08T13:03:59.000Z",
                                "updatedAt": "2023-08-08T13:03:59.000Z",
                                "GroupId": 2,
                                "UserId": 2
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "example": {
                    "groups": [
                      {
                        "id": 1,
                        "groupName": "name",
                        "groupDescription": "des...",
                        "groupPicture": null,
                        "createdAt": "2023-08-01T23:10:34.000Z",
                        "updatedAt": "2023-08-08T13:06:11.000Z",
                        "GroupUser": {
                          "id": 1,
                          "groupId": 1,
                          "userId": 2,
                          "state": "Owner",
                          "createdAt": "2023-08-01T23:10:34.000Z",
                          "updatedAt": "2023-08-01T23:10:34.000Z",
                          "GroupId": 1,
                          "UserId": 2
                        }
                      },
                      {
                        "id": 2,
                        "groupName": "name",
                        "groupDescription": "des...",
                        "groupPicture": null,
                        "createdAt": "2023-08-08T13:03:58.000Z",
                        "updatedAt": "2023-08-08T13:03:58.000Z",
                        "GroupUser": {
                          "id": 2,
                          "groupId": 2,
                          "userId": 2,
                          "state": "Owner",
                          "createdAt": "2023-08-08T13:03:59.000Z",
                          "updatedAt": "2023-08-08T13:03:59.000Z",
                          "GroupId": 2,
                          "UserId": 2
                        }
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "Authentication invalid"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "Authentication invalid"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{id}/join": {
        "post": {
          "tags": [
            "group"
          ],
          "summary": "Join Request",
          "operationId": "JoinRequest",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "canceled successfully"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "canceled successfully"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "Authentication invalid"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "Authentication invalid"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "groupId": [
                              "group not found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "groupId": [
                        "group not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "group"
          ],
          "summary": "get Join Requests (Admin)",
          "operationId": "getJoinRequests(Admin)",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "users": [
                            {
                              "userId": 2,
                              "state": "pending",
                              "createdAt": "2023-08-08T13:20:45.000Z",
                              "User": {
                                "username": "potatUser"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "example": {
                    "users": [
                      {
                        "userId": 2,
                        "state": "pending",
                        "createdAt": "2023-08-08T13:20:45.000Z",
                        "User": {
                          "username": "potatUser"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "Forbidden Operation Not allowed"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "Forbidden Operation Not allowed"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "groupId": [
                              "group not found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "groupId": [
                        "group not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{id}/members": {
        "get": {
          "tags": [
            "group"
          ],
          "summary": "Members",
          "operationId": "Members",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "users": [
                            {
                              "id": 1,
                              "groupId": 1,
                              "userId": 2,
                              "state": "Owner",
                              "createdAt": "2023-08-01T23:10:34.000Z",
                              "updatedAt": "2023-08-01T23:10:34.000Z",
                              "GroupId": 1,
                              "UserId": 2
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "example": {
                    "users": [
                      {
                        "id": 1,
                        "groupId": 1,
                        "userId": 2,
                        "state": "Owner",
                        "createdAt": "2023-08-01T23:10:34.000Z",
                        "updatedAt": "2023-08-01T23:10:34.000Z",
                        "GroupId": 1,
                        "UserId": 2
                      }
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "groupId": [
                              "group not found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "groupId": [
                        "group not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{groupId}/modifyRole/{userId}": {
        "post": {
          "tags": [
            "group"
          ],
          "summary": "Modify Role (Admin)",
          "operationId": "ModifyRole(Admin)",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "example": {
                        "state": "kicked"
                      }
                    }
                  ]
                },
                "example": {
                  "state": "kicked"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "updated successfully",
                          "newRole": "normal"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "updated successfully",
                    "newRole": "normal"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "state": [
                              "The state field is required."
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "state": [
                        "The state field is required."
                      ]
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "user not found"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "user not found"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{groupId}/post": {
        "get": {
          "tags": [
            "Group Post"
          ],
          "summary": "Get Posts",
          "operationId": "GetPosts",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "posts": [
                            {
                              "postId": 5,
                              "Post": {
                                "id": 5,
                                "text": "potato",
                                "picture": null,
                                "createdAt": "2023-08-04T12:46:53.000Z",
                                "state": null,
                                "updatedAt": "2023-08-04T12:46:53.000Z",
                                "userId": 2,
                                "UserId": 2,
                                "User": {
                                  "id": 2,
                                  "username": "potatUser",
                                  "picturePath": "image-1691430498994.png"
                                },
                                "Comments": [
                                  {
                                    "id": 3,
                                    "text": "comment",
                                    "createdAt": "2023-08-04T13:07:37.000Z",
                                    "updatedAt": "2023-08-04T13:07:37.000Z",
                                    "userId": 2,
                                    "postId": 5,
                                    "User": {
                                      "id": 2,
                                      "username": "potatUser",
                                      "picturePath": "image-1691430498994.png"
                                    }
                                  }
                                ],
                                "Reactions": []
                              }
                            },
                            {
                              "postId": 2,
                              "Post": {
                                "id": 2,
                                "text": null,
                                "picture": null,
                                "createdAt": "2023-08-03T22:09:14.000Z",
                                "state": null,
                                "updatedAt": "2023-08-03T22:09:14.000Z",
                                "userId": 2,
                                "UserId": 2,
                                "User": {
                                  "id": 2,
                                  "username": "potatUser",
                                  "picturePath": "image-1691430498994.png"
                                },
                                "Comments": [],
                                "Reactions": []
                              }
                            },
                            {
                              "postId": 3,
                              "Post": {
                                "id": 3,
                                "text": "potato",
                                "picture": null,
                                "createdAt": "2023-08-04T11:05:34.000Z",
                                "state": null,
                                "updatedAt": "2023-08-04T11:05:34.000Z",
                                "userId": 2,
                                "UserId": 2,
                                "User": {
                                  "id": 2,
                                  "username": "potatUser",
                                  "picturePath": "image-1691430498994.png"
                                },
                                "Comments": [],
                                "Reactions": []
                              }
                            },
                            {
                              "postId": 6,
                              "Post": {
                                "id": 6,
                                "text": null,
                                "picture": null,
                                "createdAt": "2023-08-08T13:53:26.000Z",
                                "state": "private",
                                "updatedAt": "2023-08-08T13:53:26.000Z",
                                "userId": 2,
                                "UserId": 2,
                                "User": {
                                  "id": 2,
                                  "username": "potatUser",
                                  "picturePath": "image-1691430498994.png"
                                },
                                "Comments": [],
                                "Reactions": []
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "example": {
                    "posts": [
                      {
                        "postId": 5,
                        "Post": {
                          "id": 5,
                          "text": "potato",
                          "picture": null,
                          "createdAt": "2023-08-04T12:46:53.000Z",
                          "state": null,
                          "updatedAt": "2023-08-04T12:46:53.000Z",
                          "userId": 2,
                          "UserId": 2,
                          "User": {
                            "id": 2,
                            "username": "potatUser",
                            "picturePath": "image-1691430498994.png"
                          },
                          "Comments": [
                            {
                              "id": 3,
                              "text": "comment",
                              "createdAt": "2023-08-04T13:07:37.000Z",
                              "updatedAt": "2023-08-04T13:07:37.000Z",
                              "userId": 2,
                              "postId": 5,
                              "User": {
                                "id": 2,
                                "username": "potatUser",
                                "picturePath": "image-1691430498994.png"
                              }
                            }
                          ],
                          "Reactions": []
                        }
                      },
                      {
                        "postId": 2,
                        "Post": {
                          "id": 2,
                          "text": null,
                          "picture": null,
                          "createdAt": "2023-08-03T22:09:14.000Z",
                          "state": null,
                          "updatedAt": "2023-08-03T22:09:14.000Z",
                          "userId": 2,
                          "UserId": 2,
                          "User": {
                            "id": 2,
                            "username": "potatUser",
                            "picturePath": "image-1691430498994.png"
                          },
                          "Comments": [],
                          "Reactions": []
                        }
                      },
                      {
                        "postId": 3,
                        "Post": {
                          "id": 3,
                          "text": "potato",
                          "picture": null,
                          "createdAt": "2023-08-04T11:05:34.000Z",
                          "state": null,
                          "updatedAt": "2023-08-04T11:05:34.000Z",
                          "userId": 2,
                          "UserId": 2,
                          "User": {
                            "id": 2,
                            "username": "potatUser",
                            "picturePath": "image-1691430498994.png"
                          },
                          "Comments": [],
                          "Reactions": []
                        }
                      },
                      {
                        "postId": 6,
                        "Post": {
                          "id": 6,
                          "text": null,
                          "picture": null,
                          "createdAt": "2023-08-08T13:53:26.000Z",
                          "state": "private",
                          "updatedAt": "2023-08-08T13:53:26.000Z",
                          "userId": 2,
                          "UserId": 2,
                          "User": {
                            "id": 2,
                            "username": "potatUser",
                            "picturePath": "image-1691430498994.png"
                          },
                          "Comments": [],
                          "Reactions": []
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "Forbidden Operation Not allowed"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "Forbidden Operation Not allowed"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "groupId": [
                              "group not found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "groupId": [
                        "group not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "tags": [
            "Group Post"
          ],
          "summary": "Create Post",
          "operationId": "CreatePost",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "Post created successfully",
                          "post": {
                            "createdAt": "2023-08-08T14:29:12.156Z",
                            "updatedAt": "2023-08-08T14:29:12.159Z",
                            "id": 7,
                            "userId": 2,
                            "text": "creating new post",
                            "state": "private"
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "Post created successfully",
                    "post": {
                      "createdAt": "2023-08-08T14:29:12.156Z",
                      "updatedAt": "2023-08-08T14:29:12.159Z",
                      "id": 7,
                      "userId": 2,
                      "text": "creating new post",
                      "state": "private"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "Forbidden Operation Not allowed"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "Forbidden Operation Not allowed"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "groupId": [
                              "group not found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "groupId": [
                        "group not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{groupId}/post/{postId}": {
        "get": {
          "tags": [
            "Group Post"
          ],
          "summary": "Get Post",
          "operationId": "GetPost",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "postId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the post Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "success",
                          "post": {
                            "id": 1,
                            "text": "text for post",
                            "picture": null,
                            "createdAt": "2023-08-01T23:19:00.000Z",
                            "state": "public",
                            "updatedAt": "2023-08-01T23:19:00.000Z",
                            "userId": 2,
                            "commentsCount": 1,
                            "likesCount": 0,
                            "dislikesCount": 0,
                            "User": {
                              "id": 2,
                              "username": "potatUser",
                              "picturePath": "image-1691430498994.png"
                            },
                            "Comments": [
                              {
                                "id": 1,
                                "text": "comment text",
                                "createdAt": "2023-08-01T23:19:40.000Z",
                                "updatedAt": "2023-08-01T23:19:40.000Z",
                                "userId": 2,
                                "postId": 1,
                                "User": {
                                  "id": 2,
                                  "username": "potatUser",
                                  "picturePath": "image-1691430498994.png"
                                }
                              }
                            ],
                            "Reactions": []
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "success",
                    "post": {
                      "id": 1,
                      "text": "text for post",
                      "picture": null,
                      "createdAt": "2023-08-01T23:19:00.000Z",
                      "state": "public",
                      "updatedAt": "2023-08-01T23:19:00.000Z",
                      "userId": 2,
                      "commentsCount": 1,
                      "likesCount": 0,
                      "dislikesCount": 0,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      },
                      "Comments": [
                        {
                          "id": 1,
                          "text": "comment text",
                          "createdAt": "2023-08-01T23:19:40.000Z",
                          "updatedAt": "2023-08-01T23:19:40.000Z",
                          "userId": 2,
                          "postId": 1,
                          "User": {
                            "id": 2,
                            "username": "potatUser",
                            "picturePath": "image-1691430498994.png"
                          }
                        }
                      ],
                      "Reactions": []
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "Forbidden Operation Not allowed"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "Forbidden Operation Not allowed"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "postId": [
                              "post ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "postId": [
                        "post ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "patch": {
          "tags": [
            "Group Post"
          ],
          "summary": "Edit post",
          "operationId": "Editpost",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "postId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the post Id"
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "example": {
                        "text": "editing"
                      }
                    }
                  ]
                },
                "example": {
                  "text": "editing"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "post updated successfully"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "post updated successfully"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "postId": [
                              "post ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "postId": [
                        "post ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Group Post"
          ],
          "summary": "Delete Post",
          "operationId": "DeletePost",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "postId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the post Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "success"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "success"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "postId": [
                              "post ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "postId": [
                        "post ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{groupId}/comment/{postId}": {
        "post": {
          "tags": [
            "Group Comment"
          ],
          "summary": "Create Comment",
          "operationId": "CreateComment",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "postId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the post Id"
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "createdAt": "2023-08-08T15:50:59.292Z",
                          "updatedAt": "2023-08-08T15:50:59.294Z",
                          "id": 4,
                          "userId": 2,
                          "postId": "5",
                          "text": "comment"
                        }
                      }
                    ]
                  },
                  "example": {
                    "createdAt": "2023-08-08T15:50:59.292Z",
                    "updatedAt": "2023-08-08T15:50:59.294Z",
                    "id": 4,
                    "userId": 2,
                    "postId": "5",
                    "text": "comment"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "text": [
                              "The text field is required."
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "text": [
                        "The text field is required."
                      ]
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "postId": [
                              "post ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "postId": [
                        "post ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{groupId}/comment/{commentId}": {
        "patch": {
          "tags": [
            "Group Comment"
          ],
          "summary": "Edit Comment",
          "operationId": "EditComment",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "commentId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the comment Id"
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "example": {
                        "text": "editing.."
                      }
                    }
                  ]
                },
                "example": {
                  "text": "editing.."
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "id": 3,
                          "text": "editing..",
                          "createdAt": "2023-08-04T13:07:37.000Z",
                          "updatedAt": "2023-08-08T16:12:56.000Z",
                          "userId": 2,
                          "postId": 5
                        }
                      }
                    ]
                  },
                  "example": {
                    "id": 3,
                    "text": "editing..",
                    "createdAt": "2023-08-04T13:07:37.000Z",
                    "updatedAt": "2023-08-08T16:12:56.000Z",
                    "userId": 2,
                    "postId": 5
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "commentId": [
                              "comment ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "commentId": [
                        "comment ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "Group Comment"
          ],
          "summary": "get Comment",
          "operationId": "getComment",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "commentId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the comment Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "id": 4,
                          "text": "comment",
                          "createdAt": "2023-08-08T15:50:59.000Z",
                          "updatedAt": "2023-08-08T15:50:59.000Z",
                          "userId": 2,
                          "postId": 5,
                          "User": {
                            "id": 2,
                            "username": "potatUser",
                            "picturePath": "image-1691430498994.png"
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "id": 4,
                    "text": "comment",
                    "createdAt": "2023-08-08T15:50:59.000Z",
                    "updatedAt": "2023-08-08T15:50:59.000Z",
                    "userId": 2,
                    "postId": 5,
                    "User": {
                      "id": 2,
                      "username": "potatUser",
                      "picturePath": "image-1691430498994.png"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "commentId": [
                              "comment ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "commentId": [
                        "comment ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Group Comment"
          ],
          "summary": "Deleting Comment",
          "operationId": "DeletingComment",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "commentId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the comment Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "comment has been deleted"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "comment has been deleted"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "commentId": [
                              "comment ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "commentId": [
                        "comment ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{groupId}/comment/all/{postId}": {
        "get": {
          "tags": [
            "Group Comment"
          ],
          "summary": "All Post's Comments",
          "operationId": "AllPost'sComments",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "postId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the post Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "type": "array",
                    "description": "",
                    "example": [
                      {
                        "id": 3,
                        "text": "editing..",
                        "createdAt": "2023-08-04T13:07:37.000Z",
                        "updatedAt": "2023-08-08T16:12:56.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 4,
                        "text": "comment",
                        "createdAt": "2023-08-08T15:50:59.000Z",
                        "updatedAt": "2023-08-08T15:50:59.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 5,
                        "text": "comment",
                        "createdAt": "2023-08-08T15:51:16.000Z",
                        "updatedAt": "2023-08-08T15:51:16.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 9,
                        "text": null,
                        "createdAt": "2023-08-08T15:53:36.000Z",
                        "updatedAt": "2023-08-08T15:53:36.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 10,
                        "text": null,
                        "createdAt": "2023-08-08T15:54:42.000Z",
                        "updatedAt": "2023-08-08T15:54:42.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      }
                    ]
                  },
                  "example": [
                    {
                      "id": 3,
                      "text": "editing..",
                      "createdAt": "2023-08-04T13:07:37.000Z",
                      "updatedAt": "2023-08-08T16:12:56.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 4,
                      "text": "comment",
                      "createdAt": "2023-08-08T15:50:59.000Z",
                      "updatedAt": "2023-08-08T15:50:59.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 5,
                      "text": "comment",
                      "createdAt": "2023-08-08T15:51:16.000Z",
                      "updatedAt": "2023-08-08T15:51:16.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 9,
                      "text": null,
                      "createdAt": "2023-08-08T15:53:36.000Z",
                      "updatedAt": "2023-08-08T15:53:36.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 10,
                      "text": null,
                      "createdAt": "2023-08-08T15:54:42.000Z",
                      "updatedAt": "2023-08-08T15:54:42.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    }
                  ]
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "postId": [
                              "post ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "postId": [
                        "post ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{groupId}/reaction/{postId}": {
        "post": {
          "tags": [
            "Group Reaction"
          ],
          "summary": "Create Reaction",
          "operationId": "CreateReaction",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "postId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the post Id"
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "example": {
                        "state": "dislike"
                      }
                    }
                  ]
                },
                "example": {
                  "state": "dislike"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "createdAt": "2023-08-08T16:24:35.906Z",
                          "updatedAt": "2023-08-08T16:24:35.908Z",
                          "id": 2,
                          "userId": 2,
                          "postId": "5"
                        }
                      }
                    ]
                  },
                  "example": {
                    "createdAt": "2023-08-08T16:24:35.906Z",
                    "updatedAt": "2023-08-08T16:24:35.908Z",
                    "id": 2,
                    "userId": 2,
                    "postId": "5"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "postId": [
                              "post ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "postId": [
                        "post ont found"
                      ]
                    }
                  }
                }
              }
            },
            "409": {
              "description": "Conflict",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "reaction": [
                            "you have already reacted to this post"
                          ]
                        }
                      }
                    ]
                  },
                  "example": {
                    "reaction": [
                      "you have already reacted to this post"
                    ]
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{groupId}/reaction/{reactionId}": {
        "get": {
          "tags": [
            "Group Reaction"
          ],
          "summary": "get Reaction",
          "operationId": "getReaction",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "reactionId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the reaction Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "id": 2,
                          "state": null,
                          "createdAt": "2023-08-08T16:24:35.000Z",
                          "updatedAt": "2023-08-08T16:24:35.000Z",
                          "userId": 2,
                          "postId": 5,
                          "User": {
                            "id": 2,
                            "username": "potatUser",
                            "picturePath": "image-1691430498994.png"
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "id": 2,
                    "state": null,
                    "createdAt": "2023-08-08T16:24:35.000Z",
                    "updatedAt": "2023-08-08T16:24:35.000Z",
                    "userId": 2,
                    "postId": 5,
                    "User": {
                      "id": 2,
                      "username": "potatUser",
                      "picturePath": "image-1691430498994.png"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "reactionId": [
                              "reaction ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "reactionId": [
                        "reaction ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Group Reaction"
          ],
          "summary": "Delete Reaction",
          "operationId": "DeleteReaction",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "reactionId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the reaction Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "reaction has been deleted"
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "reaction has been deleted"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "reactionId": [
                              "reaction ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "reactionId": [
                        "reaction ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "patch": {
          "tags": [
            "Group Reaction"
          ],
          "summary": "Edit Reaction",
          "operationId": "EditReaction",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "reactionId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the reaction Id"
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "example": {
                        "state": "dislike"
                      }
                    }
                  ]
                },
                "example": {
                  "state": "dislike"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "id": 5,
                          "state": "dislike",
                          "createdAt": "2023-08-08T16:25:27.000Z",
                          "updatedAt": "2023-08-08T17:42:15.000Z",
                          "userId": 2,
                          "postId": 5
                        }
                      }
                    ]
                  },
                  "example": {
                    "id": 5,
                    "state": "dislike",
                    "createdAt": "2023-08-08T16:25:27.000Z",
                    "updatedAt": "2023-08-08T17:42:15.000Z",
                    "userId": 2,
                    "postId": 5
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "reactionId": [
                              "reaction ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "reactionId": [
                        "reaction ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/group/{groupId}/reaction/all/{postId}": {
        "get": {
          "tags": [
            "Group Reaction"
          ],
          "summary": "get All Reaction",
          "operationId": "getAllReaction",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the group Id"
            },
            {
              "in": "path",
              "name": "postId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the post Id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "type": "array",
                    "description": "",
                    "example": [
                      {
                        "id": 2,
                        "state": null,
                        "createdAt": "2023-08-08T16:24:35.000Z",
                        "updatedAt": "2023-08-08T16:24:35.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 3,
                        "state": null,
                        "createdAt": "2023-08-08T16:24:47.000Z",
                        "updatedAt": "2023-08-08T16:24:47.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 4,
                        "state": null,
                        "createdAt": "2023-08-08T16:25:21.000Z",
                        "updatedAt": "2023-08-08T16:25:21.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 5,
                        "state": "dislike",
                        "createdAt": "2023-08-08T16:25:27.000Z",
                        "updatedAt": "2023-08-08T17:42:15.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 6,
                        "state": null,
                        "createdAt": "2023-08-08T16:25:29.000Z",
                        "updatedAt": "2023-08-08T16:25:29.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 7,
                        "state": null,
                        "createdAt": "2023-08-08T16:25:30.000Z",
                        "updatedAt": "2023-08-08T16:25:30.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 8,
                        "state": null,
                        "createdAt": "2023-08-08T16:25:32.000Z",
                        "updatedAt": "2023-08-08T16:25:32.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 9,
                        "state": null,
                        "createdAt": "2023-08-08T16:25:33.000Z",
                        "updatedAt": "2023-08-08T16:25:33.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 10,
                        "state": null,
                        "createdAt": "2023-08-08T16:25:34.000Z",
                        "updatedAt": "2023-08-08T16:25:34.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 11,
                        "state": null,
                        "createdAt": "2023-08-08T16:25:36.000Z",
                        "updatedAt": "2023-08-08T16:25:36.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 12,
                        "state": null,
                        "createdAt": "2023-08-08T16:25:37.000Z",
                        "updatedAt": "2023-08-08T16:25:37.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 13,
                        "state": null,
                        "createdAt": "2023-08-08T16:25:38.000Z",
                        "updatedAt": "2023-08-08T16:25:38.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 14,
                        "state": "like",
                        "createdAt": "2023-08-08T16:25:50.000Z",
                        "updatedAt": "2023-08-08T16:25:50.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 15,
                        "state": "like",
                        "createdAt": "2023-08-08T16:25:53.000Z",
                        "updatedAt": "2023-08-08T16:25:53.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 16,
                        "state": "like",
                        "createdAt": "2023-08-08T16:25:54.000Z",
                        "updatedAt": "2023-08-08T16:25:54.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 17,
                        "state": "like",
                        "createdAt": "2023-08-08T16:25:56.000Z",
                        "updatedAt": "2023-08-08T16:25:56.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      },
                      {
                        "id": 18,
                        "state": "dislike",
                        "createdAt": "2023-08-08T16:26:01.000Z",
                        "updatedAt": "2023-08-08T16:26:01.000Z",
                        "userId": 2,
                        "postId": 5,
                        "User": {
                          "id": 2,
                          "username": "potatUser",
                          "picturePath": "image-1691430498994.png"
                        }
                      }
                    ]
                  },
                  "example": [
                    {
                      "id": 2,
                      "state": null,
                      "createdAt": "2023-08-08T16:24:35.000Z",
                      "updatedAt": "2023-08-08T16:24:35.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 3,
                      "state": null,
                      "createdAt": "2023-08-08T16:24:47.000Z",
                      "updatedAt": "2023-08-08T16:24:47.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 4,
                      "state": null,
                      "createdAt": "2023-08-08T16:25:21.000Z",
                      "updatedAt": "2023-08-08T16:25:21.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 5,
                      "state": "dislike",
                      "createdAt": "2023-08-08T16:25:27.000Z",
                      "updatedAt": "2023-08-08T17:42:15.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 6,
                      "state": null,
                      "createdAt": "2023-08-08T16:25:29.000Z",
                      "updatedAt": "2023-08-08T16:25:29.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 7,
                      "state": null,
                      "createdAt": "2023-08-08T16:25:30.000Z",
                      "updatedAt": "2023-08-08T16:25:30.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 8,
                      "state": null,
                      "createdAt": "2023-08-08T16:25:32.000Z",
                      "updatedAt": "2023-08-08T16:25:32.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 9,
                      "state": null,
                      "createdAt": "2023-08-08T16:25:33.000Z",
                      "updatedAt": "2023-08-08T16:25:33.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 10,
                      "state": null,
                      "createdAt": "2023-08-08T16:25:34.000Z",
                      "updatedAt": "2023-08-08T16:25:34.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 11,
                      "state": null,
                      "createdAt": "2023-08-08T16:25:36.000Z",
                      "updatedAt": "2023-08-08T16:25:36.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 12,
                      "state": null,
                      "createdAt": "2023-08-08T16:25:37.000Z",
                      "updatedAt": "2023-08-08T16:25:37.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 13,
                      "state": null,
                      "createdAt": "2023-08-08T16:25:38.000Z",
                      "updatedAt": "2023-08-08T16:25:38.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 14,
                      "state": "like",
                      "createdAt": "2023-08-08T16:25:50.000Z",
                      "updatedAt": "2023-08-08T16:25:50.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 15,
                      "state": "like",
                      "createdAt": "2023-08-08T16:25:53.000Z",
                      "updatedAt": "2023-08-08T16:25:53.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 16,
                      "state": "like",
                      "createdAt": "2023-08-08T16:25:54.000Z",
                      "updatedAt": "2023-08-08T16:25:54.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 17,
                      "state": "like",
                      "createdAt": "2023-08-08T16:25:56.000Z",
                      "updatedAt": "2023-08-08T16:25:56.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    },
                    {
                      "id": 18,
                      "state": "dislike",
                      "createdAt": "2023-08-08T16:26:01.000Z",
                      "updatedAt": "2023-08-08T16:26:01.000Z",
                      "userId": 2,
                      "postId": 5,
                      "User": {
                        "id": 2,
                        "username": "potatUser",
                        "picturePath": "image-1691430498994.png"
                      }
                    }
                  ]
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "postId": [
                              "post ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "postId": [
                        "post ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/images/profile/{userId}": {
        "get": {
          "tags": [
            "Images"
          ],
          "summary": "Profile",
          "operationId": "Profile",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "schema": {
                "type": "integer"
              },
              "required": true
            }
          ],
          "responses": {
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "userId": [
                              "user not found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "userId": [
                        "user not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/images/group/{groupId}": {
        "get": {
          "tags": [
            "Images"
          ],
          "summary": "group",
          "operationId": "group",
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "schema": {
                "type": "integer"
              },
              "required": true
            }
          ],
          "responses": {
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "groupId": [
                              "group not found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "groupId": [
                        "group not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/images/post/{postId}": {
        "get": {
          "tags": [
            "Images"
          ],
          "summary": "post",
          "operationId": "post",
          "parameters": [
            {
              "in": "path",
              "name": "postId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the post Id"
            }
          ],
          "responses": {
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "postId": [
                              "post ont found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "postId": [
                        "post ont found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/images/groupPost/{postId}": {
        "get": {
          "tags": [
            "Images"
          ],
          "summary": "group post",
          "operationId": "grouppost",
          "parameters": [
            {
              "in": "path",
              "name": "postId",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "the post Id"
            }
          ],
          "responses": {
            "404": {
              "description": "Not Found",
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "allOf": [
                      {
                        "example": {
                          "msg": "failed",
                          "errors": {
                            "postId": [
                              "post not found"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": {
                    "msg": "failed",
                    "errors": {
                      "postId": [
                        "post not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/images/{imageNameWithType}": {
        "get": {
          "tags": [
            "Images"
          ],
          "description": "static path for images by the (picturePath)</br >\n    you must be authorized </br>\n    <h3> Note : send token in bearer </h3>\n    ",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "picturePath",
              "in": "query",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "file": {}
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": {
                      "msg": "Authentication invalid"
                    }
                  }
                }
              }
            },
            "404": {
              "description": " 404 Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "Object",
                    "example": [
                      {
                        "html": "<h1>404 <br> Route does not exist</br></h1>"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  